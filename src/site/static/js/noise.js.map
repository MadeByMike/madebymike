{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/noise.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","FastSimplexNoise","options","amplitude","Error","this","frequency","octaves","isFinite","Math","floor","persistence","random","min","max","scale","q","Uint8Array","perm","permMod12","__webpack_exports__","cylindrical","circumference","coords","length","cylindrical2D","cylindrical3D","x","y","nx","PI","rdx","a","sin","b","cos","scaled3D","z","scaled4D","dot","gs","slice","reduce","total","g","raw","raw2D","raw3D","raw4D","sqrt","j","G2","x0","y0","i1","j1","x1","y1","x2","y2","ii","jj","gi0","gi1","gi2","t0","t1","t2","pow","GRAD3D","k1","i2","j2","k2","k","G3","z0","z1","z2","x3","y3","z3","kk","gi3","t3","w","G4","w0","rankx","ranky","rankz","rankw","l1","l2","i3","j3","k3","l3","w1","w2","w3","x4","y4","z4","w4","ll","gi4","t4","GRAD4D","scaled","scaled2D","maxAmplitude","noise","spherical","spherical3D","spherical2D","ny","rdy","sinY","sinRds"],"mappings":"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","file":"noise.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 22);\n","/*\r\n * A speed-improved simplex noise algorithm for 2D, 3D and 4D in JavaScript.\r\n *\r\n * Based on example code by Stefan Gustavson (stegu@itn.liu.se).\r\n * Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\r\n * Better rank ordering method by Stefan Gustavson in 2012.\r\n *\r\n * This code was placed in the public domain by its original author,\r\n * Stefan Gustavson. You may use it as you see fit, but\r\n * attribution is appreciated.\r\n */\r\nfunction FastSimplexNoise(options) {\r\n  if (options === void 0) {\r\n    options = {};\r\n  }\r\n  if (options.hasOwnProperty(\"amplitude\")) {\r\n    if (typeof options.amplitude !== \"number\")\r\n      throw new Error(\"options.amplitude must be a number\");\r\n    this.amplitude = options.amplitude;\r\n  } else this.amplitude = 1.0;\r\n  if (options.hasOwnProperty(\"frequency\")) {\r\n    if (typeof options.frequency !== \"number\")\r\n      throw new Error(\"options.frequency must be a number\");\r\n    this.frequency = options.frequency;\r\n  } else this.frequency = 1.0;\r\n  if (options.hasOwnProperty(\"octaves\")) {\r\n    if (\r\n      typeof options.octaves !== \"number\" ||\r\n      !isFinite(options.octaves) ||\r\n      Math.floor(options.octaves) !== options.octaves\r\n    ) {\r\n      throw new Error(\"options.octaves must be an integer\");\r\n    }\r\n    this.octaves = options.octaves;\r\n  } else this.octaves = 1;\r\n  if (options.hasOwnProperty(\"persistence\")) {\r\n    if (typeof options.persistence !== \"number\")\r\n      throw new Error(\"options.persistence must be a number\");\r\n    this.persistence = options.persistence;\r\n  } else this.persistence = 0.5;\r\n  if (options.hasOwnProperty(\"random\")) {\r\n    if (typeof options.random !== \"function\")\r\n      throw new Error(\"options.random must be a function\");\r\n    this.random = options.random;\r\n  } else this.random = Math.random;\r\n  var min;\r\n  if (options.hasOwnProperty(\"min\")) {\r\n    if (typeof options.min !== \"number\")\r\n      throw new Error(\"options.min must be a number\");\r\n    min = options.min;\r\n  } else min = -1;\r\n  var max;\r\n  if (options.hasOwnProperty(\"max\")) {\r\n    if (typeof options.max !== \"number\")\r\n      throw new Error(\"options.max must be a number\");\r\n    max = options.max;\r\n  } else max = 1;\r\n  if (min >= max)\r\n    throw new Error(\r\n      \"options.min (\" + min + \") must be less than options.max (\" + max + \")\"\r\n    );\r\n  this.scale =\r\n    min === -1 && max === 1\r\n      ? function(value) {\r\n          return value;\r\n        }\r\n      : function(value) {\r\n          return min + ((value + 1) / 2) * (max - min);\r\n        };\r\n  var p = new Uint8Array(256);\r\n  for (var i = 0; i < 256; i++) p[i] = i;\r\n  var n;\r\n  var q;\r\n  for (var i = 255; i > 0; i--) {\r\n    n = Math.floor((i + 1) * this.random());\r\n    q = p[i];\r\n    p[i] = p[n];\r\n    p[n] = q;\r\n  }\r\n  this.perm = new Uint8Array(512);\r\n  this.permMod12 = new Uint8Array(512);\r\n  for (var i = 0; i < 512; i++) {\r\n    this.perm[i] = p[i & 255];\r\n    this.permMod12[i] = this.perm[i] % 12;\r\n  }\r\n}\r\nFastSimplexNoise.prototype.cylindrical = function(circumference, coords) {\r\n  switch (coords.length) {\r\n    case 2:\r\n      return this.cylindrical2D(circumference, coords[0], coords[1]);\r\n    case 3:\r\n      return this.cylindrical3D(circumference, coords[0], coords[1], coords[2]);\r\n    default:\r\n      return null;\r\n  }\r\n};\r\nFastSimplexNoise.prototype.cylindrical2D = function(circumference, x, y) {\r\n  var nx = x / circumference;\r\n  var r = circumference / (2 * Math.PI);\r\n  var rdx = nx * 2 * Math.PI;\r\n  var a = r * Math.sin(rdx);\r\n  var b = r * Math.cos(rdx);\r\n  return this.scaled3D(a, b, y);\r\n};\r\nFastSimplexNoise.prototype.cylindrical3D = function(circumference, x, y, z) {\r\n  var nx = x / circumference;\r\n  var r = circumference / (2 * Math.PI);\r\n  var rdx = nx * 2 * Math.PI;\r\n  var a = r * Math.sin(rdx);\r\n  var b = r * Math.cos(rdx);\r\n  return this.scaled4D(a, b, y, z);\r\n};\r\nFastSimplexNoise.prototype.dot = function(gs, coords) {\r\n  return gs\r\n    .slice(0, Math.min(gs.length, coords.length))\r\n    .reduce(function(total, g, i) {\r\n      return total + g * coords[i];\r\n    }, 0);\r\n};\r\nFastSimplexNoise.prototype.raw = function(coords) {\r\n  switch (coords.length) {\r\n    case 2:\r\n      return this.raw2D(coords[0], coords[1]);\r\n    case 3:\r\n      return this.raw3D(coords[0], coords[1], coords[2]);\r\n    case 4:\r\n      return this.raw4D(coords[0], coords[1], coords[2], coords[3]);\r\n    default:\r\n      return null;\r\n  }\r\n};\r\nFastSimplexNoise.prototype.raw2D = function(x, y) {\r\n  // Skew the input space to determine which simplex cell we're in\r\n  var s = (x + y) * 0.5 * (Math.sqrt(3.0) - 1.0); // Hairy factor for 2D\r\n  var i = Math.floor(x + s);\r\n  var j = Math.floor(y + s);\r\n  var t = (i + j) * FastSimplexNoise.G2;\r\n  var X0 = i - t; // Unskew the cell origin back to (x,y) space\r\n  var Y0 = j - t;\r\n  var x0 = x - X0; // The x,y distances from the cell origin\r\n  var y0 = y - Y0;\r\n  // Determine which simplex we are in.\r\n  var i1 = x0 > y0 ? 1 : 0;\r\n  var j1 = x0 > y0 ? 0 : 1;\r\n  // Offsets for corners\r\n  var x1 = x0 - i1 + FastSimplexNoise.G2;\r\n  var y1 = y0 - j1 + FastSimplexNoise.G2;\r\n  var x2 = x0 - 1.0 + 2.0 * FastSimplexNoise.G2;\r\n  var y2 = y0 - 1.0 + 2.0 * FastSimplexNoise.G2;\r\n  // Work out the hashed gradient indices of the three simplex corners\r\n  var ii = i & 255;\r\n  var jj = j & 255;\r\n  var gi0 = this.permMod12[ii + this.perm[jj]];\r\n  var gi1 = this.permMod12[ii + i1 + this.perm[jj + j1]];\r\n  var gi2 = this.permMod12[ii + 1 + this.perm[jj + 1]];\r\n  // Calculate the contribution from the three corners\r\n  var t0 = 0.5 - x0 * x0 - y0 * y0;\r\n  var n0 =\r\n    t0 < 0\r\n      ? 0.0\r\n      : Math.pow(t0, 4) * this.dot(FastSimplexNoise.GRAD3D[gi0], [x0, y0]);\r\n  var t1 = 0.5 - x1 * x1 - y1 * y1;\r\n  var n1 =\r\n    t1 < 0\r\n      ? 0.0\r\n      : Math.pow(t1, 4) * this.dot(FastSimplexNoise.GRAD3D[gi1], [x1, y1]);\r\n  var t2 = 0.5 - x2 * x2 - y2 * y2;\r\n  var n2 =\r\n    t2 < 0\r\n      ? 0.0\r\n      : Math.pow(t2, 4) * this.dot(FastSimplexNoise.GRAD3D[gi2], [x2, y2]);\r\n  // Add contributions from each corner to get the final noise value.\r\n  // The result is scaled to return values in the interval [-1, 1]\r\n  return 70.14805770653952 * (n0 + n1 + n2);\r\n};\r\nFastSimplexNoise.prototype.raw3D = function(x, y, z) {\r\n  // Skew the input space to determine which simplex cell we're in\r\n  var s = (x + y + z) / 3.0; // Very nice and simple skew factor for 3D\r\n  var i = Math.floor(x + s);\r\n  var j = Math.floor(y + s);\r\n  var k = Math.floor(z + s);\r\n  var t = (i + j + k) * FastSimplexNoise.G3;\r\n  var X0 = i - t; // Unskew the cell origin back to (x,y,z) space\r\n  var Y0 = j - t;\r\n  var Z0 = k - t;\r\n  var x0 = x - X0; // The x,y,z distances from the cell origin\r\n  var y0 = y - Y0;\r\n  var z0 = z - Z0;\r\n  // Deterine which simplex we are in\r\n  var i1, j1, k1; // Offsets for second corner of simplex in (i,j,k) coords\r\n  var i2, j2, k2; // Offsets for third corner of simplex in (i,j,k) coords\r\n  if (x0 >= y0) {\r\n    if (y0 >= z0) {\r\n      i1 = i2 = j2 = 1;\r\n      j1 = k1 = k2 = 0;\r\n    } else if (x0 >= z0) {\r\n      i1 = i2 = k2 = 1;\r\n      j1 = k1 = j2 = 0;\r\n    } else {\r\n      k1 = i2 = k2 = 1;\r\n      i1 = j1 = j2 = 0;\r\n    }\r\n  } else {\r\n    if (y0 < z0) {\r\n      k1 = j2 = k2 = 1;\r\n      i1 = j1 = i2 = 0;\r\n    } else if (x0 < z0) {\r\n      j1 = j2 = k2 = 1;\r\n      i1 = k1 = i2 = 0;\r\n    } else {\r\n      j1 = i2 = j2 = 1;\r\n      i1 = k1 = k2 = 0;\r\n    }\r\n  }\r\n  var x1 = x0 - i1 + FastSimplexNoise.G3; // Offsets for second corner in (x,y,z) coords\r\n  var y1 = y0 - j1 + FastSimplexNoise.G3;\r\n  var z1 = z0 - k1 + FastSimplexNoise.G3;\r\n  var x2 = x0 - i2 + 2.0 * FastSimplexNoise.G3; // Offsets for third corner in (x,y,z) coords\r\n  var y2 = y0 - j2 + 2.0 * FastSimplexNoise.G3;\r\n  var z2 = z0 - k2 + 2.0 * FastSimplexNoise.G3;\r\n  var x3 = x0 - 1.0 + 3.0 * FastSimplexNoise.G3; // Offsets for last corner in (x,y,z) coords\r\n  var y3 = y0 - 1.0 + 3.0 * FastSimplexNoise.G3;\r\n  var z3 = z0 - 1.0 + 3.0 * FastSimplexNoise.G3;\r\n  // Work out the hashed gradient indices of the four simplex corners\r\n  var ii = i & 255;\r\n  var jj = j & 255;\r\n  var kk = k & 255;\r\n  var gi0 = this.permMod12[ii + this.perm[jj + this.perm[kk]]];\r\n  var gi1 = this.permMod12[ii + i1 + this.perm[jj + j1 + this.perm[kk + k1]]];\r\n  var gi2 = this.permMod12[ii + i2 + this.perm[jj + j2 + this.perm[kk + k2]]];\r\n  var gi3 = this.permMod12[ii + 1 + this.perm[jj + 1 + this.perm[kk + 1]]];\r\n  // Calculate the contribution from the four corners\r\n  var t0 = 0.5 - x0 * x0 - y0 * y0 - z0 * z0;\r\n  var n0 =\r\n    t0 < 0\r\n      ? 0.0\r\n      : Math.pow(t0, 4) * this.dot(FastSimplexNoise.GRAD3D[gi0], [x0, y0, z0]);\r\n  var t1 = 0.5 - x1 * x1 - y1 * y1 - z1 * z1;\r\n  var n1 =\r\n    t1 < 0\r\n      ? 0.0\r\n      : Math.pow(t1, 4) * this.dot(FastSimplexNoise.GRAD3D[gi1], [x1, y1, z1]);\r\n  var t2 = 0.5 - x2 * x2 - y2 * y2 - z2 * z2;\r\n  var n2 =\r\n    t2 < 0\r\n      ? 0.0\r\n      : Math.pow(t2, 4) * this.dot(FastSimplexNoise.GRAD3D[gi2], [x2, y2, z2]);\r\n  var t3 = 0.5 - x3 * x3 - y3 * y3 - z3 * z3;\r\n  var n3 =\r\n    t3 < 0\r\n      ? 0.0\r\n      : Math.pow(t3, 4) * this.dot(FastSimplexNoise.GRAD3D[gi3], [x3, y3, z3]);\r\n  // Add contributions from each corner to get the final noise value.\r\n  // The result is scaled to stay just inside [-1,1]\r\n  return 94.68493150681972 * (n0 + n1 + n2 + n3);\r\n};\r\nFastSimplexNoise.prototype.raw4D = function(x, y, z, w) {\r\n  // Skew the (x,y,z,w) space to determine which cell of 24 simplices we're in\r\n  var s = ((x + y + z + w) * (Math.sqrt(5.0) - 1.0)) / 4.0; // Factor for 4D skewing\r\n  var i = Math.floor(x + s);\r\n  var j = Math.floor(y + s);\r\n  var k = Math.floor(z + s);\r\n  var l = Math.floor(w + s);\r\n  var t = (i + j + k + l) * FastSimplexNoise.G4; // Factor for 4D unskewing\r\n  var X0 = i - t; // Unskew the cell origin back to (x,y,z,w) space\r\n  var Y0 = j - t;\r\n  var Z0 = k - t;\r\n  var W0 = l - t;\r\n  var x0 = x - X0; // The x,y,z,w distances from the cell origin\r\n  var y0 = y - Y0;\r\n  var z0 = z - Z0;\r\n  var w0 = w - W0;\r\n  // To find out which of the 24 possible simplices we're in, we need to determine the magnitude ordering of x0, y0,\r\n  // z0 and w0. Six pair-wise comparisons are performed between each possible pair of the four coordinates, and the\r\n  // results are used to rank the numbers.\r\n  var rankx = 0;\r\n  var ranky = 0;\r\n  var rankz = 0;\r\n  var rankw = 0;\r\n  if (x0 > y0) rankx++;\r\n  else ranky++;\r\n  if (x0 > z0) rankx++;\r\n  else rankz++;\r\n  if (x0 > w0) rankx++;\r\n  else rankw++;\r\n  if (y0 > z0) ranky++;\r\n  else rankz++;\r\n  if (y0 > w0) ranky++;\r\n  else rankw++;\r\n  if (z0 > w0) rankz++;\r\n  else rankw++;\r\n  // simplex[c] is a 4-vector with the numbers 0, 1, 2 and 3 in some order.\r\n  // Many values of c will never occur, since e.g. x>y>z>w makes x<z, y<w and x<w\r\n  // impossible. Only the 24 indices which have non-zero entries make any sense.\r\n  // We use a thresholding to set the coordinates in turn from the largest magnitude.\r\n  // Rank 3 denotes the largest coordinate.\r\n  var i1 = rankx >= 3 ? 1 : 0;\r\n  var j1 = ranky >= 3 ? 1 : 0;\r\n  var k1 = rankz >= 3 ? 1 : 0;\r\n  var l1 = rankw >= 3 ? 1 : 0;\r\n  // Rank 2 denotes the second largest coordinate.\r\n  var i2 = rankx >= 2 ? 1 : 0;\r\n  var j2 = ranky >= 2 ? 1 : 0;\r\n  var k2 = rankz >= 2 ? 1 : 0;\r\n  var l2 = rankw >= 2 ? 1 : 0;\r\n  // Rank 1 denotes the second smallest coordinate.\r\n  var i3 = rankx >= 1 ? 1 : 0;\r\n  var j3 = ranky >= 1 ? 1 : 0;\r\n  var k3 = rankz >= 1 ? 1 : 0;\r\n  var l3 = rankw >= 1 ? 1 : 0;\r\n  // The fifth corner has all coordinate offsets = 1, so no need to compute that.\r\n  var x1 = x0 - i1 + FastSimplexNoise.G4; // Offsets for second corner in (x,y,z,w) coords\r\n  var y1 = y0 - j1 + FastSimplexNoise.G4;\r\n  var z1 = z0 - k1 + FastSimplexNoise.G4;\r\n  var w1 = w0 - l1 + FastSimplexNoise.G4;\r\n  var x2 = x0 - i2 + 2.0 * FastSimplexNoise.G4; // Offsets for third corner in (x,y,z,w) coords\r\n  var y2 = y0 - j2 + 2.0 * FastSimplexNoise.G4;\r\n  var z2 = z0 - k2 + 2.0 * FastSimplexNoise.G4;\r\n  var w2 = w0 - l2 + 2.0 * FastSimplexNoise.G4;\r\n  var x3 = x0 - i3 + 3.0 * FastSimplexNoise.G4; // Offsets for fourth corner in (x,y,z,w) coords\r\n  var y3 = y0 - j3 + 3.0 * FastSimplexNoise.G4;\r\n  var z3 = z0 - k3 + 3.0 * FastSimplexNoise.G4;\r\n  var w3 = w0 - l3 + 3.0 * FastSimplexNoise.G4;\r\n  var x4 = x0 - 1.0 + 4.0 * FastSimplexNoise.G4; // Offsets for last corner in (x,y,z,w) coords\r\n  var y4 = y0 - 1.0 + 4.0 * FastSimplexNoise.G4;\r\n  var z4 = z0 - 1.0 + 4.0 * FastSimplexNoise.G4;\r\n  var w4 = w0 - 1.0 + 4.0 * FastSimplexNoise.G4;\r\n  // Work out the hashed gradient indices of the five simplex corners\r\n  var ii = i & 255;\r\n  var jj = j & 255;\r\n  var kk = k & 255;\r\n  var ll = l & 255;\r\n  var gi0 = this.perm[ii + this.perm[jj + this.perm[kk + this.perm[ll]]]] % 32;\r\n  var gi1 =\r\n    this.perm[\r\n      ii + i1 + this.perm[jj + j1 + this.perm[kk + k1 + this.perm[ll + l1]]]\r\n    ] % 32;\r\n  var gi2 =\r\n    this.perm[\r\n      ii + i2 + this.perm[jj + j2 + this.perm[kk + k2 + this.perm[ll + l2]]]\r\n    ] % 32;\r\n  var gi3 =\r\n    this.perm[\r\n      ii + i3 + this.perm[jj + j3 + this.perm[kk + k3 + this.perm[ll + l3]]]\r\n    ] % 32;\r\n  var gi4 =\r\n    this.perm[\r\n      ii + 1 + this.perm[jj + 1 + this.perm[kk + 1 + this.perm[ll + 1]]]\r\n    ] % 32;\r\n  // Calculate the contribution from the five corners\r\n  var t0 = 0.5 - x0 * x0 - y0 * y0 - z0 * z0 - w0 * w0;\r\n  var n0 =\r\n    t0 < 0\r\n      ? 0.0\r\n      : Math.pow(t0, 4) *\r\n        this.dot(FastSimplexNoise.GRAD4D[gi0], [x0, y0, z0, w0]);\r\n  var t1 = 0.5 - x1 * x1 - y1 * y1 - z1 * z1 - w1 * w1;\r\n  var n1 =\r\n    t1 < 0\r\n      ? 0.0\r\n      : Math.pow(t1, 4) *\r\n        this.dot(FastSimplexNoise.GRAD4D[gi1], [x1, y1, z1, w1]);\r\n  var t2 = 0.5 - x2 * x2 - y2 * y2 - z2 * z2 - w2 * w2;\r\n  var n2 =\r\n    t2 < 0\r\n      ? 0.0\r\n      : Math.pow(t2, 4) *\r\n        this.dot(FastSimplexNoise.GRAD4D[gi2], [x2, y2, z2, w2]);\r\n  var t3 = 0.5 - x3 * x3 - y3 * y3 - z3 * z3 - w3 * w3;\r\n  var n3 =\r\n    t3 < 0\r\n      ? 0.0\r\n      : Math.pow(t3, 4) *\r\n        this.dot(FastSimplexNoise.GRAD4D[gi3], [x3, y3, z3, w3]);\r\n  var t4 = 0.5 - x4 * x4 - y4 * y4 - z4 * z4 - w4 * w4;\r\n  var n4 =\r\n    t4 < 0\r\n      ? 0.0\r\n      : Math.pow(t4, 4) *\r\n        this.dot(FastSimplexNoise.GRAD4D[gi4], [x4, y4, z4, w4]);\r\n  // Sum up and scale the result to cover the range [-1,1]\r\n  return 72.37855765153665 * (n0 + n1 + n2 + n3 + n4);\r\n};\r\nFastSimplexNoise.prototype.scaled = function(coords) {\r\n  switch (coords.length) {\r\n    case 2:\r\n      return this.scaled2D(coords[0], coords[1]);\r\n    case 3:\r\n      return this.scaled3D(coords[0], coords[1], coords[2]);\r\n    case 4:\r\n      return this.scaled4D(coords[0], coords[1], coords[2], coords[3]);\r\n    default:\r\n      return null;\r\n  }\r\n};\r\nFastSimplexNoise.prototype.scaled2D = function(x, y) {\r\n  var amplitude = this.amplitude;\r\n  var frequency = this.frequency;\r\n  var maxAmplitude = 0;\r\n  var noise = 0;\r\n  for (var i = 0; i < this.octaves; i++) {\r\n    noise += this.raw2D(x * frequency, y * frequency) * amplitude;\r\n    maxAmplitude += amplitude;\r\n    amplitude *= this.persistence;\r\n    frequency *= 2;\r\n  }\r\n  return this.scale(noise / maxAmplitude);\r\n};\r\nFastSimplexNoise.prototype.scaled3D = function(x, y, z) {\r\n  var amplitude = this.amplitude;\r\n  var frequency = this.frequency;\r\n  var maxAmplitude = 0;\r\n  var noise = 0;\r\n  for (var i = 0; i < this.octaves; i++) {\r\n    noise +=\r\n      this.raw3D(x * frequency, y * frequency, z * frequency) * amplitude;\r\n    maxAmplitude += amplitude;\r\n    amplitude *= this.persistence;\r\n    frequency *= 2;\r\n  }\r\n  return this.scale(noise / maxAmplitude);\r\n};\r\nFastSimplexNoise.prototype.scaled4D = function(x, y, z, w) {\r\n  var amplitude = this.amplitude;\r\n  var frequency = this.frequency;\r\n  var maxAmplitude = 0;\r\n  var noise = 0;\r\n  for (var i = 0; i < this.octaves; i++) {\r\n    noise +=\r\n      this.raw4D(x * frequency, y * frequency, z * frequency, w * frequency) *\r\n      amplitude;\r\n    maxAmplitude += amplitude;\r\n    amplitude *= this.persistence;\r\n    frequency *= 2;\r\n  }\r\n  return this.scale(noise / maxAmplitude);\r\n};\r\nFastSimplexNoise.prototype.spherical = function(circumference, coords) {\r\n  switch (coords.length) {\r\n    case 3:\r\n      return this.spherical3D(circumference, coords[0], coords[1], coords[2]);\r\n    case 2:\r\n      return this.spherical2D(circumference, coords[0], coords[1]);\r\n    default:\r\n      return null;\r\n  }\r\n};\r\nFastSimplexNoise.prototype.spherical2D = function(circumference, x, y) {\r\n  var nx = x / circumference;\r\n  var ny = y / circumference;\r\n  var rdx = nx * 2 * Math.PI;\r\n  var rdy = ny * Math.PI;\r\n  var sinY = Math.sin(rdy + Math.PI);\r\n  var sinRds = 2 * Math.PI;\r\n  var a = sinRds * Math.sin(rdx) * sinY;\r\n  var b = sinRds * Math.cos(rdx) * sinY;\r\n  var d = sinRds * Math.cos(rdy);\r\n  return this.scaled3D(a, b, d);\r\n};\r\nFastSimplexNoise.prototype.spherical3D = function(circumference, x, y, z) {\r\n  var nx = x / circumference;\r\n  var ny = y / circumference;\r\n  var rdx = nx * 2 * Math.PI;\r\n  var rdy = ny * Math.PI;\r\n  var sinY = Math.sin(rdy + Math.PI);\r\n  var sinRds = 2 * Math.PI;\r\n  var a = sinRds * Math.sin(rdx) * sinY;\r\n  var b = sinRds * Math.cos(rdx) * sinY;\r\n  var d = sinRds * Math.cos(rdy);\r\n  return this.scaled4D(a, b, d, z);\r\n};\r\nFastSimplexNoise.G2 = (3.0 - Math.sqrt(3.0)) / 6.0;\r\nFastSimplexNoise.G3 = 1.0 / 6.0;\r\nFastSimplexNoise.G4 = (5.0 - Math.sqrt(5.0)) / 20.0;\r\nFastSimplexNoise.GRAD3D = [\r\n  [1, 1, 0],\r\n  [-1, 1, 0],\r\n  [1, -1, 0],\r\n  [-1, -1, 0],\r\n  [1, 0, 1],\r\n  [-1, 0, 1],\r\n  [1, 0, -1],\r\n  [-1, 0, -1],\r\n  [0, 1, 1],\r\n  [0, -1, -1],\r\n  [0, 1, -1],\r\n  [0, -1, -1]\r\n];\r\nFastSimplexNoise.GRAD4D = [\r\n  [0, 1, 1, 1],\r\n  [0, 1, 1, -1],\r\n  [0, 1, -1, 1],\r\n  [0, 1, -1, -1],\r\n  [0, -1, 1, 1],\r\n  [0, -1, 1, -1],\r\n  [0, -1, -1, 1],\r\n  [0, -1, -1, -1],\r\n  [1, 0, 1, 1],\r\n  [1, 0, 1, -1],\r\n  [1, 0, -1, 1],\r\n  [1, 0, -1, -1],\r\n  [-1, 0, 1, 1],\r\n  [-1, 0, 1, -1],\r\n  [-1, 0, -1, 1],\r\n  [-1, 0, -1, -1],\r\n  [1, 1, 0, 1],\r\n  [1, 1, 0, -1],\r\n  [1, -1, 0, 1],\r\n  [1, -1, 0, -1],\r\n  [-1, 1, 0, 1],\r\n  [-1, 1, 0, -1],\r\n  [-1, -1, 0, 1],\r\n  [-1, -1, 0, -1],\r\n  [1, 1, 1, 0],\r\n  [1, 1, -1, 0],\r\n  [1, -1, 1, 0],\r\n  [1, -1, -1, 0],\r\n  [-1, 1, 1, 0],\r\n  [-1, 1, -1, 0],\r\n  [-1, -1, 1, 0],\r\n  [-1, -1, -1, 0]\r\n];\r\n\r\nexport default FastSimplexNoise;\r\n"],"sourceRoot":""}