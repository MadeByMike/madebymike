{"expireTime":9007200803979234000,"key":"transformer-remark-markdown-html-ast-6c575f518b90f743b353d04cc8d41fb1-gatsby-remark-prismjs-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A friend was trying to set a theme on a container and have it apply a color to the border of a heading, and the body text. Something like this:\n","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":1,"offset":144}}},{"type":"element","tagName":"img","properties":{"src":"//images.ctfassets.net/2cb7djx9f8kv/5d9fvupAkguQaCqAIkAIeY/fbc8b88a1eca000dba724401728e2dcb/custom-props.png","alt":"A black heading with a blue border and blue paragraphs below"},"children":[],"position":{"start":{"line":2,"column":1,"offset":144},"end":{"line":2,"column":174,"offset":317}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":174,"offset":317}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"She wanted to keep it simple with minimal CSS and ideally set the theme by applying just a single class in the HTML.","position":{"start":{"line":4,"column":1,"offset":319},"end":{"line":4,"column":117,"offset":435}}}],"position":{"start":{"line":4,"column":1,"offset":319},"end":{"line":4,"column":117,"offset":435}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Since we wanted to change the color of more than just paragraphs in the body text, it made sense to start by setting the ","position":{"start":{"line":6,"column":1,"offset":438},"end":{"line":6,"column":122,"offset":559}}},{"type":"raw","value":"<code class=\"language-text\">color</code>","position":{"start":{"line":6,"column":122,"offset":559},"end":{"line":6,"column":129,"offset":566}}},{"type":"text","value":" property on a container element. This would allow all elements inside the container to inherit the theme color and we could just set the headings back to black.","position":{"start":{"line":6,"column":129,"offset":566},"end":{"line":6,"column":290,"offset":727}}}],"position":{"start":{"line":6,"column":1,"offset":438},"end":{"line":6,"column":290,"offset":727}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Since we wanted to set the color in just one place, I suggested we set the value of ","position":{"start":{"line":8,"column":1,"offset":729},"end":{"line":8,"column":85,"offset":813}}},{"type":"raw","value":"<code class=\"language-text\">border-color</code>","position":{"start":{"line":8,"column":85,"offset":813},"end":{"line":8,"column":99,"offset":827}}},{"type":"text","value":" on the headings to inherit. This would cause the heading element to have the same value for ","position":{"start":{"line":8,"column":99,"offset":827},"end":{"line":8,"column":192,"offset":920}}},{"type":"raw","value":"<code class=\"language-text\">border-color</code>","position":{"start":{"line":8,"column":192,"offset":920},"end":{"line":8,"column":206,"offset":934}}},{"type":"text","value":" as its parent element. To my initial surprise the color of the border was black.","position":{"start":{"line":8,"column":206,"offset":934},"end":{"line":8,"column":287,"offset":1015}}}],"position":{"start":{"line":8,"column":1,"offset":729},"end":{"line":8,"column":287,"offset":1015}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"My CSS was something like this:","position":{"start":{"line":10,"column":1,"offset":1017},"end":{"line":10,"column":32,"offset":1048}}}],"position":{"start":{"line":10,"column":1,"offset":1017},"end":{"line":10,"column":32,"offset":1048}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.theme</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #2378a3<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.theme-heading</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> black<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border-color</span><span class=\"token punctuation\">:</span> inherit<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":12,"column":1,"offset":1050},"end":{"line":21,"column":4,"offset":1150}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Since there is no ","position":{"start":{"line":23,"column":1,"offset":1152},"end":{"line":23,"column":19,"offset":1170}}},{"type":"raw","value":"<code class=\"language-text\">border-color</code>","position":{"start":{"line":23,"column":19,"offset":1170},"end":{"line":23,"column":33,"offset":1184}}},{"type":"text","value":" set on the ","position":{"start":{"line":23,"column":33,"offset":1184},"end":{"line":23,"column":45,"offset":1196}}},{"type":"raw","value":"<code class=\"language-text\">.theme</code>","position":{"start":{"line":23,"column":45,"offset":1196},"end":{"line":23,"column":53,"offset":1204}}},{"type":"text","value":" class, the default value is used. The default for ","position":{"start":{"line":23,"column":53,"offset":1204},"end":{"line":23,"column":104,"offset":1255}}},{"type":"raw","value":"<code class=\"language-text\">border-color</code>","position":{"start":{"line":23,"column":104,"offset":1255},"end":{"line":23,"column":118,"offset":1269}}},{"type":"text","value":" is ","position":{"start":{"line":23,"column":118,"offset":1269},"end":{"line":23,"column":122,"offset":1273}}},{"type":"raw","value":"<code class=\"language-text\">currentColor</code>","position":{"start":{"line":23,"column":122,"offset":1273},"end":{"line":23,"column":136,"offset":1287}}},{"type":"text","value":", and in the context of ","position":{"start":{"line":23,"column":136,"offset":1287},"end":{"line":23,"column":160,"offset":1311}}},{"type":"raw","value":"<code class=\"language-text\">.theme</code>","position":{"start":{"line":23,"column":160,"offset":1311},"end":{"line":23,"column":168,"offset":1319}}},{"type":"text","value":", the value of ","position":{"start":{"line":23,"column":168,"offset":1319},"end":{"line":23,"column":183,"offset":1334}}},{"type":"raw","value":"<code class=\"language-text\">currentColor</code>","position":{"start":{"line":23,"column":183,"offset":1334},"end":{"line":23,"column":197,"offset":1348}}},{"type":"text","value":" in this example is ","position":{"start":{"line":23,"column":197,"offset":1348},"end":{"line":23,"column":217,"offset":1368}}},{"type":"raw","value":"<code class=\"language-text\">#2378a3</code>","position":{"start":{"line":23,"column":217,"offset":1368},"end":{"line":23,"column":226,"offset":1377}}},{"type":"text","value":".  This is the value I expected ","position":{"start":{"line":23,"column":226,"offset":1377},"end":{"line":23,"column":258,"offset":1409}}},{"type":"raw","value":"<code class=\"language-text\">.theme-heading</code>","position":{"start":{"line":23,"column":258,"offset":1409},"end":{"line":23,"column":274,"offset":1425}}},{"type":"text","value":" to inherit. ","position":{"start":{"line":23,"column":274,"offset":1425},"end":{"line":23,"column":287,"offset":1438}}}],"position":{"start":{"line":23,"column":1,"offset":1152},"end":{"line":23,"column":287,"offset":1438}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You might be wondering, as I was, what exactly is happening? The answer is, it’s not a bug, and it’s still inheriting from the parent element. It turns out, when we inherit ","position":{"start":{"line":25,"column":1,"offset":1440},"end":{"line":25,"column":174,"offset":1613}}},{"type":"raw","value":"<code class=\"language-text\">currentColor</code>","position":{"start":{"line":25,"column":174,"offset":1613},"end":{"line":25,"column":188,"offset":1627}}},{"type":"text","value":" we are not retrieving the resolved value of that property from the parent. Instead we are inheriting the keyword itself, and the computed value will be resolved in the local context. And, therefore in this example the border color will be black.","position":{"start":{"line":25,"column":188,"offset":1627},"end":{"line":25,"column":434,"offset":1873}}}],"position":{"start":{"line":25,"column":1,"offset":1440},"end":{"line":25,"column":434,"offset":1873}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The solution is of course to set the value of the ","position":{"start":{"line":27,"column":1,"offset":1875},"end":{"line":27,"column":51,"offset":1925}}},{"type":"raw","value":"<code class=\"language-text\">border-color</code>","position":{"start":{"line":27,"column":51,"offset":1925},"end":{"line":27,"column":65,"offset":1939}}},{"type":"text","value":" as well as ","position":{"start":{"line":27,"column":65,"offset":1939},"end":{"line":27,"column":77,"offset":1951}}},{"type":"raw","value":"<code class=\"language-text\">color</code>","position":{"start":{"line":27,"column":77,"offset":1951},"end":{"line":27,"column":84,"offset":1958}}},{"type":"text","value":" in the ","position":{"start":{"line":27,"column":84,"offset":1958},"end":{"line":27,"column":92,"offset":1966}}},{"type":"raw","value":"<code class=\"language-text\">.theme</code>","position":{"start":{"line":27,"column":92,"offset":1966},"end":{"line":27,"column":100,"offset":1974}}},{"type":"text","value":" selector:","position":{"start":{"line":27,"column":100,"offset":1974},"end":{"line":27,"column":110,"offset":1984}}}],"position":{"start":{"line":27,"column":1,"offset":1875},"end":{"line":27,"column":110,"offset":1984}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.theme</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #2378a3<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border-color</span><span class=\"token punctuation\">:</span> #2378a3<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.theme-heading</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> black<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border-color</span><span class=\"token punctuation\">:</span> inherit<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":29,"column":1,"offset":1986},"end":{"line":40,"column":4,"offset":2112}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now we are no longer inheriting a dynamic property and the border color will be ","position":{"start":{"line":42,"column":1,"offset":2114},"end":{"line":42,"column":81,"offset":2194}}},{"type":"raw","value":"<code class=\"language-text\">#2378a3</code>","position":{"start":{"line":42,"column":81,"offset":2194},"end":{"line":42,"column":90,"offset":2203}}},{"type":"text","value":" as expected. And we are still setting the color values only on the ","position":{"start":{"line":42,"column":90,"offset":2203},"end":{"line":42,"column":158,"offset":2271}}},{"type":"raw","value":"<code class=\"language-text\">.theme</code>","position":{"start":{"line":42,"column":158,"offset":2271},"end":{"line":42,"column":166,"offset":2279}}},{"type":"text","value":" class.","position":{"start":{"line":42,"column":166,"offset":2279},"end":{"line":42,"column":173,"offset":2286}}}],"position":{"start":{"line":42,"column":1,"offset":2114},"end":{"line":42,"column":173,"offset":2286}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Maybe this is what you expected. Perhaps the reason I didn’t, is that I’ve been working with custom properties a lot recently, and although they are both dynamic, custom properties will not work like ","position":{"start":{"line":44,"column":1,"offset":2288},"end":{"line":44,"column":201,"offset":2488}}},{"type":"raw","value":"<code class=\"language-text\">currentColor</code>","position":{"start":{"line":44,"column":201,"offset":2488},"end":{"line":44,"column":215,"offset":2502}}},{"type":"text","value":" in the same situation.","position":{"start":{"line":44,"column":215,"offset":2502},"end":{"line":44,"column":238,"offset":2525}}}],"position":{"start":{"line":44,"column":1,"offset":2288},"end":{"line":44,"column":238,"offset":2525}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"An equivalent example with custom properties would look something like this:","position":{"start":{"line":46,"column":1,"offset":2527},"end":{"line":46,"column":77,"offset":2603}}}],"position":{"start":{"line":46,"column":1,"offset":2527},"end":{"line":46,"column":77,"offset":2603}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.theme</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">--theme-color</span><span class=\"token punctuation\">:</span> #2378a3<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--theme-color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border-color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--theme-color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.theme-heading</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">--theme-color</span><span class=\"token punctuation\">:</span> black<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--theme-color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border-color</span><span class=\"token punctuation\">:</span> inherit<span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":48,"column":1,"offset":2605},"end":{"line":60,"column":4,"offset":2816}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this situation the ","position":{"start":{"line":62,"column":1,"offset":2818},"end":{"line":62,"column":23,"offset":2840}}},{"type":"raw","value":"<code class=\"language-text\">border-color</code>","position":{"start":{"line":62,"column":23,"offset":2840},"end":{"line":62,"column":37,"offset":2854}}},{"type":"text","value":" of ","position":{"start":{"line":62,"column":37,"offset":2854},"end":{"line":62,"column":41,"offset":2858}}},{"type":"raw","value":"<code class=\"language-text\">.theme-heading</code>","position":{"start":{"line":62,"column":41,"offset":2858},"end":{"line":62,"column":57,"offset":2874}}},{"type":"text","value":" is inheriting the ","position":{"start":{"line":62,"column":57,"offset":2874},"end":{"line":62,"column":76,"offset":2893}}},{"type":"raw","value":"<code class=\"language-text\">--theme-color</code>","position":{"start":{"line":62,"column":76,"offset":2893},"end":{"line":62,"column":91,"offset":2908}}},{"type":"text","value":" custom property from the parent element. Yet even though the value of ","position":{"start":{"line":62,"column":91,"offset":2908},"end":{"line":62,"column":162,"offset":2979}}},{"type":"raw","value":"<code class=\"language-text\">--theme-color</code>","position":{"start":{"line":62,"column":162,"offset":2979},"end":{"line":62,"column":177,"offset":2994}}},{"type":"text","value":" is set locally to black, its border-color will not use this local value in the same way ","position":{"start":{"line":62,"column":177,"offset":2994},"end":{"line":62,"column":266,"offset":3083}}},{"type":"raw","value":"<code class=\"language-text\">currentColor</code>","position":{"start":{"line":62,"column":266,"offset":3083},"end":{"line":62,"column":280,"offset":3097}}},{"type":"text","value":" did.","position":{"start":{"line":62,"column":280,"offset":3097},"end":{"line":62,"column":285,"offset":3102}}}],"position":{"start":{"line":62,"column":1,"offset":2818},"end":{"line":62,"column":285,"offset":3102}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Inheriting a value set by a custom property will always match the resolved value from the parent.","position":{"start":{"line":64,"column":1,"offset":3104},"end":{"line":64,"column":98,"offset":3201}}}],"position":{"start":{"line":64,"column":1,"offset":3104},"end":{"line":64,"column":98,"offset":3201}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note","position":{"start":{"line":66,"column":3,"offset":3205},"end":{"line":66,"column":7,"offset":3209}}}],"position":{"start":{"line":66,"column":1,"offset":3203},"end":{"line":66,"column":9,"offset":3211}}},{"type":"text","value":": The ","position":{"start":{"line":66,"column":9,"offset":3211},"end":{"line":66,"column":15,"offset":3217}}},{"type":"raw","value":"<code class=\"language-text\">color</code>","position":{"start":{"line":66,"column":15,"offset":3217},"end":{"line":66,"column":22,"offset":3224}}},{"type":"text","value":" property in this example will take the local value, because it is not inherited.","position":{"start":{"line":66,"column":22,"offset":3224},"end":{"line":66,"column":103,"offset":3305}}}],"position":{"start":{"line":66,"column":1,"offset":3203},"end":{"line":66,"column":103,"offset":3305}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The key difference here is: The ","position":{"start":{"line":68,"column":1,"offset":3307},"end":{"line":68,"column":33,"offset":3339}}},{"type":"raw","value":"<code class=\"language-text\">currentColor</code>","position":{"start":{"line":68,"column":33,"offset":3339},"end":{"line":68,"column":47,"offset":3353}}},{"type":"text","value":" keyword is not resolved at computed-value time, but is a reference to the used value of the local ","position":{"start":{"line":68,"column":47,"offset":3353},"end":{"line":68,"column":146,"offset":3452}}},{"type":"raw","value":"<code class=\"language-text\">color</code>","position":{"start":{"line":68,"column":146,"offset":3452},"end":{"line":68,"column":153,"offset":3459}}},{"type":"text","value":" property.","position":{"start":{"line":68,"column":153,"offset":3459},"end":{"line":68,"column":163,"offset":3469}}}],"position":{"start":{"line":68,"column":1,"offset":3307},"end":{"line":68,"column":163,"offset":3469}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Since learning about custom properties, I'd started to think of ","position":{"start":{"line":70,"column":1,"offset":3471},"end":{"line":70,"column":65,"offset":3535}}},{"type":"raw","value":"<code class=\"language-text\">currentColor</code>","position":{"start":{"line":70,"column":65,"offset":3535},"end":{"line":70,"column":79,"offset":3549}}},{"type":"text","value":" as a dynamic property in a very similar to custom properties. It turns out there are some fundamental differences that have real implications that we should be aware of. And again, this example highlights how different custom properties are from variables in preprocessors.","position":{"start":{"line":70,"column":79,"offset":3549},"end":{"line":70,"column":353,"offset":3823}}}],"position":{"start":{"line":70,"column":1,"offset":3471},"end":{"line":70,"column":353,"offset":3823}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":74,"column":1,"offset":3827}}}}